---
import { ViewTransitions } from 'astro:transitions';

interface Props {
	title: string;
	description: string;
	image?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const { title, description, image = '/favicon.ico' } = Astro.props;
---
<ViewTransitions></ViewTransitions>

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/fhg/favicon.ico" />
<meta name="generator" content={Astro.generator} />


<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />

<script is:inline src="https://code.jquery.com/jquery-3.7.0.min.js"></script>

<script is:inline src="https://www.googletagmanager.com/gtag/js?id=G-8GWLGV29V7"></script>
<script is:inline >
  window.dataLayer = window.dataLayer || [];
  function gtag() {
    dataLayer.push(arguments);
  }
  gtag("js", new Date());
  gtag("config", "G-8GWLGV29V7");
</script>

<script type="module" >
	document.addEventListener('astro:page-load', () => {
	   const obeserver = new IntersectionObserver((entries) => {
		entries.forEach((entry) => {
		  if(entry.isIntersecting) {
			entry.target.classList.add('show');
		  } else {
			entry.target.classList.remove('show');
		  }
		});
	  });
	  const hiddenElements = document.querySelectorAll('.notshow');
	  hiddenElements.forEach((el) => obeserver.observe(el));
	}, );  
</script>  

<script type="module" >
	document.addEventListener('astro:page-load', () => {
		const menuButton = document.querySelector('#menuButton')
		const navHeader = document.querySelector('#navHeader');
		const menuButtonIconHam = document.querySelector('#menuButtonIconHam');
		const menuButtonIconClose = document.querySelector('#menuButtonIconClose');

		if (menuButton) {
			menuButton.addEventListener('click', toggleMenu);
		}
		
		function toggleMenu() {
			if (menuButtonIconHam) {
				menuButtonIconHam.toggleAttribute('hidden');
			}
			if (menuButtonIconClose) {
				menuButtonIconClose.toggleAttribute('hidden');
			}
			if (navHeader) {
				navHeader.toggleAttribute('mobile-menu-open');
			}
		}
	}, );  
</script>